version: '3'

networks:
  wpsite:

# volumes: 
#   wp:
#   mysql_wp:

services:
  # Wordpress
  wordpress:
    container_name: wp
    depends_on:
      - db
    image: wordpress:latest
    ports:
      - '8000:80'
    restart: always
    volumes: 
      - ./src_wordpress:/var/www/html
      - ./env/wordpress_php.ini:/usr/local/etc/php/conf.d/wordpress_php.ini
      
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_NAME: wp
      WORDPRESS_DB_USER: wp
      WORDPRESS_DB_PASSWORD: wp
    networks:
      - wpsite

  # Database
  db:
    container_name: mysql
    image: mysql:latest
    restart: unless-stopped
    tty: true
    ports: 
      - 4306:3306
    networks:
      - wpsite
    volumes:
      - ./docker/mysql_wp:/var/lib/mysql
      - ./env/mysqlconf:/etc/mysql/conf.d
    # command: >
    #           bash -c "mysqld --user=root --max_allowed_packet=32M"
    
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: wp
      MYSQL_USER: wp
      MYSQL_PASSWORD: wp


  # phpmyadmin
  phpmyadmin:
    container_name: phpmyadmin_wp
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '8080:80'
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root 
    networks:
      - wpsite

# // wordpress_php.ini
# file_uploads = On
# memory_limit = 500M
# upload_max_filesize = 500M
# post_max_size = 500M
# max_execution_time = 600

## access mysql CLI
# docker exec -it mysql /bin/bash 
# mysql -p # password:root
# sudo rm -fr wp mysql_wp
# sudo rm -fr wp mysql_wp && docker-compose down
# sudo rm -fr wp mysql_wp && docker-compose down && docker-compose up --remove-orphan
